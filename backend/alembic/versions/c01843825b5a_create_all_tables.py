"""create all tables

Revision ID: c01843825b5a
Revises: 319469b61bf2
Create Date: 2025-05-30 20:59:27.392061

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c01843825b5a'
down_revision: Union[str, None] = '319469b61bf2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('auth_provider', sa.String(length=32), nullable=False),
    sa.Column('provider_id', sa.String(), nullable=True),
    sa.Column('roles', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('invite_token', sa.String(), nullable=True),
    sa.Column('referral_code', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.UUID(), nullable=True),
    sa.Column('language', sa.String(length=8), nullable=True),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_attempts', sa.Integer(), nullable=True),
    sa.Column('login_history', sa.JSON(), nullable=True),
    sa.Column('user_score', sa.Integer(), nullable=True),
    sa.Column('custom_settings', sa.JSON(), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('blocked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', 'auth_provider', name='uq_email_provider'),
    sa.UniqueConstraint('username', 'auth_provider', name='uq_username_provider'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_users_referral', 'users', ['referral_code'], unique=False)
    op.create_index('idx_users_tags', 'users', ['tags'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_token', sa.UUID(), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_active_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_sessions_active', 'sessions', ['is_active'], unique=False)
    op.create_index('idx_sessions_token', 'sessions', ['session_token'], unique=False)
    op.create_index('idx_sessions_user_id', 'sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('plan', sa.String(length=32), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_id', sa.String(), nullable=True),
    sa.Column('payment_method', sa.String(length=32), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_subscriptions_status', 'subscriptions', ['status'], unique=False)
    op.create_index('idx_subscriptions_user_id', 'subscriptions', ['user_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('error_code', sa.String(length=64), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('stacktrace', sa.Text(), nullable=True),
    sa.Column('component', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_errorlogs_session_id', 'error_logs', ['session_id'], unique=False)
    op.create_index('idx_errorlogs_user_id', 'error_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_error_logs_id'), 'error_logs', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('usage_tokens', sa.Integer(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_messages_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('idx_messages_session_id', 'messages', ['session_id'], unique=False)
    op.create_index('idx_messages_type', 'messages', ['type'], unique=False)
    op.create_index('idx_messages_user_id', 'messages', ['user_id'], unique=False)
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_index('idx_messages_user_id', table_name='messages')
    op.drop_index('idx_messages_type', table_name='messages')
    op.drop_index('idx_messages_session_id', table_name='messages')
    op.drop_index('idx_messages_created_at', table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_error_logs_id'), table_name='error_logs')
    op.drop_index('idx_errorlogs_user_id', table_name='error_logs')
    op.drop_index('idx_errorlogs_session_id', table_name='error_logs')
    op.drop_table('error_logs')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_index('idx_subscriptions_user_id', table_name='subscriptions')
    op.drop_index('idx_subscriptions_status', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_index('idx_sessions_user_id', table_name='sessions')
    op.drop_index('idx_sessions_token', table_name='sessions')
    op.drop_index('idx_sessions_active', table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index('idx_users_tags', table_name='users')
    op.drop_index('idx_users_referral', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
